app:
  title: Dev Portal
  support:
    url: https://github.com/giantswarm/giantswarm/labels/component%2Fdevportal
    items:
      - title: Issues
        icon: github
        links:
          - url: https://github.com/giantswarm/giantswarm/labels/component%2Fdevportal
            title: GitHub Issues
      - title: Slack discussion
        icon: chat
        links:
          - url: https://gigantic.slack.com/archives/C055VLMTPFE
            title: '#wg-dev-portal'

organization:
  name: Giant Swarm

backend:
  reading:
    allow:
      - host: '*.giantswarm.io'

proxy:
  endpoints:
    /circleci/api:
      target: https://circleci.com/api/v1.1
      headers:
        Circle-Token: ${CIRCLECI_API_TOKEN}
    /grafana/api:
      target: https://giantswarm.grafana.net/
      headers:
        Authorization: Bearer ${GRAFANA_TOKEN}
    /opsgenie/api:
      target: https://api.opsgenie.com
      headers:
        Authorization: GenieKey ${OPSGENIE_API_KEY}
    /quay/api:
      target: https://quay.io
      headers:
        X-Requested-With: XMLHttpRequest
        Authorization: Bearer ${QUAY_TOKEN}
      changeOrigin: true
      secure: true

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - name: gaggle
          url: https://happaapi.gaggle.azuretest.gigantic.io
          authProvider: oidc
          oidcTokenProvider: gs-gaggle
        - name: gazelle
          url: https://happaapi.gazelle.awsprod.gigantic.io
          authProvider: oidc
          oidcTokenProvider: gs-gazelle
        - name: golem
          url: https://happaapi.golem.gaws.gigantic.io
          authProvider: oidc
          oidcTokenProvider: gs-golem
        - name: grizzly
          url: https://happaapi.grizzly.gaws.gigantic.io
          authProvider: oidc
          oidcTokenProvider: gs-grizzly

auth:
  environment: development
  session:
    secret: ${AUTH_SESSION_SECRET}
  providers:
    github:
      development:
        clientId: ${GITHUB_OAUTH_CLIENT_ID}
        clientSecret: ${GITHUB_OAUTH_CLIENT_SECRET}
        signIn:
          resolvers:
            - resolver: usernameMatchingUserEntityName
    gs-gaggle:
      development:
        metadataUrl: https://dex.gaggle.azuretest.gigantic.io/.well-known/openid-configuration
        clientId: ${AUTH_DEX_GAGGLE_CLIENT_ID}
        clientSecret: ${AUTH_DEX_GAGGLE_CLIENT_SECRET}
    gs-gazelle:
      development:
        metadataUrl: https://dex.gazelle.awsprod.gigantic.io/.well-known/openid-configuration
        clientId: ${AUTH_DEX_GAZELLE_CLIENT_ID}
        clientSecret: ${AUTH_DEX_GAZELLE_CLIENT_SECRET}
    gs-golem:
      development:
        metadataUrl: https://dex.golem.gaws.gigantic.io/.well-known/openid-configuration
        clientId: ${AUTH_DEX_GOLEM_CLIENT_ID}
        clientSecret: ${AUTH_DEX_GOLEM_CLIENT_SECRET}
    gs-grizzly:
      development:
        metadataUrl: https://dex.grizzly.gaws.gigantic.io/.well-known/openid-configuration
        clientId: ${AUTH_DEX_GRIZZLY_CLIENT_ID}
        clientSecret: ${AUTH_DEX_GRIZZLY_CLIENT_SECRET}

grafana:
  domain: https://giantswarm.grafana.net

opsgenie:
  domain: https://giantswarm.app.opsgenie.com

gs:
  installations:
    gaggle:
      pipeline: stable-testing
    gazelle:
      pipeline: stable
    golem:
      pipeline: testing
    grizzly:
      pipeline: stable-testing

catalog:
  locations:
    - type: url
      target: https://github.com/giantswarm/github/blob/main/catalog/*.yaml

quay:
  uiUrl: https://quay.io
