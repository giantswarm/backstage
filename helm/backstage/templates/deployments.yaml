---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
      component: backstage
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        component: backstage
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{ .Values.name }}
              topologyKey: kubernetes.io/hostname
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: {{ .Values.userID }}
        runAsGroup: {{ .Values.groupID }}
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Values.image.name }}
          image: "{{ .Values.registry.domain }}/{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          resources:
            requests:
              cpu: 300m
              memory: 500Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          envFrom:
            - secretRef:
                name: backstage-secrets
          volumeMounts:
            - name: catalog-volume
              readOnly: true
              mountPath: /app/catalog
              items:
                - key: catalog.yaml
                  path: catalog.yaml
            - name: secret-volume
              readOnly: true
              mountPath: /app/github-app-production-credentials.yaml
              subPath: github-app-production-credentials.yaml
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: catalog-volume
          configMap:
            name: catalog
        - name: secret-volume
          secret:
            secretName: github-app-credentials-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.oauth2Proxy.name }}
    component: oauth2-proxy
  name: {{ .Values.oauth2Proxy.name }}
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.name }}
      component: oauth2-proxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        component: oauth2-proxy
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Values.oauth2Proxy.name }}
          image: "{{ .Values.registry.domain }}/{{ .Values.oauth2Proxy.image.repository }}:{{ .Values.oauth2Proxy.version }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.oauth2Proxy.port }}
          args:
            - --provider=github
            - --github-org={{ .Values.oauth2Proxy.github.organizationName }}
            - --github-team={{ .Values.oauth2Proxy.github.teamName }}
            - --email-domain=*
            - --upstream=http://{{ .Values.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.port }}/
            - --http-address=0.0.0.0:{{ .Values.oauth2Proxy.port }}
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: client_id
                  name: oauth2-proxy
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: client_secret
                  name: oauth2-proxy
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  key: cookie_secret
                  name: oauth2-proxy
          resources:
            limits:
              cpu: 300m
              memory: 20M
            requests:
              cpu: 50m
              memory: 20M
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
