---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
    {{- include "labels.backstage" $ | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
      component: backstage
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        component: backstage
        {{- include "labels.backstage" $ | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{ .Values.name }}
              topologyKey: kubernetes.io/hostname
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: {{ .Values.userID }}
        runAsGroup: {{ .Values.groupID }}
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Values.image.name }}
          image: "{{ .Values.registry.domain }}/{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          {{- if .Values.backstage.command }}
          command: {{- .Values.backstage.command | toYaml | nindent 12 }}
          {{- end }}
          args:
          {{- range .Values.backstage.args }}
            - {{ . | quote }}
          {{- end }}
          {{- if .Values.backstage.extraAppConfig }}
          {{- range .Values.backstage.extraAppConfig }}
            - "--config"
            - "{{ .filename }}"
          {{- end }}
          {{- end }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          envFrom:
            - secretRef:
                name: backstage-secrets
          env:
          - name: VERSION
            value: "{{ .Chart.AppVersion }}"
          volumeMounts:
            - name: secret-volume
              readOnly: true
              mountPath: /app/github-app-production-credentials.yaml
              subPath: github-app-production-credentials.yaml
            {{- if .Values.backstage.extraAppConfig }}
            {{- range .Values.backstage.extraAppConfig }}
            - name: {{ .configMapRef }}
              mountPath: "/app/{{ .filename }}"
              subPath: {{ .filename }}
            {{- end }}
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: secret-volume
          secret:
            secretName: github-app-credentials-secret
        {{- if .Values.backstage.extraAppConfig }}
        {{- range .Values.backstage.extraAppConfig }}
        - name: {{ .configMapRef }}
          configMap:
            name: {{ .configMapRef }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
