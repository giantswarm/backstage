{{- if .Values.database.enabled }}
---
# CNPs to allow backstage to access postgresql
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  labels:
    {{- include "labels.backstage" $ | nindent 4 }}
  name: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}
  namespace: {{ .Release.Namespace }}
spec:
  endpointSelector:
    matchLabels:
      cnpg.io/cluster: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}
  egress:
    # Allow egress to other CNPG cluster members.
    - toEndpoints:
        - matchLabels:
            cnpg.io/cluster: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}
      toPorts:
        - ports:
            - port: "5432"
    # Allow egress to world and apiserver for object storage
    - toEntities:
      - world
      - kube-apiserver
  ingress:
    - fromEndpoints:
        # Allow ingress from backstage
        - matchLabels:
            app.kubernetes.io/instance: {{ .Chart.Name }}
        # Allow ingress from other CNPG cluster members (including join pods)
        - matchLabels:
            cnpg.io/cluster: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}
      toPorts:
        - ports:
            - port: "5432"
---
# Pod monitor used to monitor the postgresql cluster. We cannot use .spec.enablePodMonitor because we cannot add the observability.giantswarm.io/tenant label
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    observability.giantswarm.io/tenant: giantswarm
    {{- include "labels.backstage" $ | nindent 4 }}
  name: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      cnpg.io/cluster: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}
  podMetricsEndpoints:
  - port: metrics
{{- if and .Values.database.exposed .Values.database.hostname }}
---
# Postgresql cluster ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}
  namespace: {{ .Release.Namespace }}
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.database.hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}-rw 
                port:
                  number: "5432"
{{- end }}
{{- range .Values.database.roles }}
---
# managed role secret
apiVersion: v1
data:
  username: {{ .name }}
  password: {{ .password }}
kind: Secret
metadata:
  name: {{ $.Chart.Name }}-{{ $.Values.database.clusterNameSuffix }}-{{ .name | b64dec }}
  namespace: {{ $.Release.Namespace }}
  labels:
    cnpg.io/reload: "true"
type: kubernetes.io/basic-auth
{{- end }}
---
# Postgresql cluster
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  labels:
    {{- include "labels.backstage" $ | nindent 4 }}
  name: {{ .Chart.Name }}-{{ .Values.database.clusterNameSuffix }}
  namespace: {{ .Release.Namespace }}
spec:
  imageName: {{ .Values.registry.domain }}/{{ .Values.database.image }}
  instances: 2
  storage:
    size: {{ .Values.database.storageSize }}
  {{- if .Values.database.roles }}
  managed:
    roles:
    {{- range .Values.database.roles }}
    - name: {{ .name | b64dec | quote }}
      ensure: present
      login: true
      superuser: false
      passwordSecret:
        name: {{ $.Chart.Name }}-{{ $.Values.database.clusterNameSuffix }}-{{ .name | b64dec }}
    {{- end }}
  postgresql:
    pg_hba:
    {{- range .Values.database.roles }}
      - host app {{ .name | b64dec }} md5
    {{- end }}    
  {{- end }}
{{- end }}
