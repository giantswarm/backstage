apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{ .Values.name }}
              topologyKey: kubernetes.io/hostname
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: {{ .Values.userID }}
        runAsGroup: {{ .Values.groupID }}
      containers:
        - name: {{ .Values.image.name }}
          image: "{{ .Values.registry.domain }}/{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          resources:
            requests:
              cpu: 30m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 100Mi
          envFrom:
            - secretRef:
                name: backstage-secrets
          volumeMounts:
            - name: secret-volume
              readOnly: true
              mountPath: "/etc/secret-volume"
          securityContext:
            readOnlyRootFilesystem: true
      volumes:
        - name: secret-volume
          secret:
            secretName: github-app-credentials-secret
