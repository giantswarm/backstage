name: backstage
namespace: backstage

backstageDiscovery:
  # Value to set for the backstage.io/kubernetes-id label in resources, for discovery in Backstage.
  kubernetesId: backstage

userID: 1000
groupID: 1000

image:
  name: backstage
  repository: giantswarm/backstage

port: 7007
hostnames: []

registry:
  domain: gsoci.azurecr.io

resources:
  verticalPodAutoscaler:
    enabled: true
  requests:
    cpu: 30m
    memory: 300M
  limits:
    cpu: 500m
    memory: 600M

authSessionSecret: ''

backendSecret: ''

circleci:
  apiToken: ''

dexAuthCredentials:
  gaggle:
    clientID: ''
    clientSecret: ''
  gazelle:
    clientID: ''
    clientSecret: ''
  golem:
    clientID: ''
    clientSecret: ''
  grizzly:
    clientID: ''
    clientSecret: ''

githubAuthCredentials:
  clientID: ''
  clientSecret: ''

githubAppCredentials: ''

grafana:
  apiToken: ''

# Quay plugin configuration
quay:
  apiToken: ''

sentry:
  app:
    dsn: ''
  backend:
    dsn: ''

telemetrydeck:
  salt: ''

aws:
  accessKeyID: ''
  secretAccessKey: ''

# Can be used to assign pods to the node pool. E.g. - giantswarm.io/machine-deployment: a1b2c
# Docs - https://docs.giantswarm.io/advanced/node-pools/#assigning-workloads
nodeSelector: {}

# Upstream Backstage chart configuration
# https://github.com/backstage/charts/blob/main/charts/backstage/values.yaml

# -- Backstage parameters
# @default -- See below
backstage:
  # -- Backstage container command
  command: ['node', 'packages/backend']

  # -- Backstage container command arguments
  args: []

  # -- Extra app configuration files to inline into command arguments
  extraAppConfig: []

  # Allows to define the appConfig as a multiline string that generates a ConfigMap
  # automatically, not requiring to have it pre provisioned as with the extraAppConfig key.
  # DO NOT USE if you need to put sensitive data in the appConfig.
  # E.g:
  # appConfig:
  #   app:
  #     baseUrl: https://somedomain.tld
  # -- Generates ConfigMap and configures it in the Backstage pods
  appConfig: {}
