version: 2.1

orbs:
  architect: giantswarm/architect@4.29.0

defaults: &defaults
  working_directory: ~/backstage
  docker:
    - image: cimg/node:16.20

job_filters: &job_filters
  filters:
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
    branches:
      only: /.*/

whitelist: &whitelist
  paths:
    - node_modules/*
    - packages/app/dist/*
    - packages/app/node_modules/*
    - packages/backend/dist/*
    - packages/backend/node_modules/*
    - VERSION

image_name: &image_name quay.io/giantswarm/backstage

workflows:
  build:
    jobs:
      - checkout:
          <<: *job_filters
      - gather-facts:
          requires:
            - checkout
          <<: *job_filters
      - test:
          requires:
            - checkout
          <<: *job_filters
      - lint:
          requires:
            - checkout
          <<: *job_filters
      - build:
          requires:
            - gather-facts
          <<: *job_filters
      - build-container:
          context: architect
          requires:
            - test
            - lint
            - build
          <<: *job_filters
      - architect/push-to-app-catalog:
          executor: app-build-suite
          name: push-backstage-to-operations-platform-app-catalog
          context: architect
          app_catalog: "giantswarm-operations-platform-catalog"
          app_catalog_test: "giantswarm-operations-platform-test-catalog"
          chart: "backstage"
          persist_chart_archive: true
          requires:
            - build-container
          filters:
            tags:
              only: /^v.*/
      - architect/run-tests-with-ats:
          name: execute chart tests
          app-test-suite_version: v0.2.9
          app-test-suite_container_tag: 0.2.9
          filters:
            branches:
              ignore:
                - main
          requires:
            - push-backstage-to-operations-platform-app-catalog

jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "yarn.lock" }}
            - v1-npm-deps-

      - run:
          name: Print version information
          command: |
            node --version
            yarn --version

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v1-npm-deps-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: ~/backstage
          <<: *whitelist

  gather-facts:
    executor: architect/architect

    working_directory: ~/backstage
    steps:
      - checkout

      - attach_workspace:
          at: ~/backstage

      - run:
          name: Create VERSION file
          command: |
            echo -n "$(architect project version)" > VERSION
            echo "$(cat VERSION)"

      - persist_to_workspace:
          root: ~/backstage
          <<: *whitelist

  lint:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/backstage

      - run:
          name: Typecheck code using the TypeScript compiler
          command: yarn run tsc

      - run:
          name: Lint code using ESlint
          command: yarn run lint:all

      - run:
          name: Validate code style using prettier
          command: yarn run prettier:check

  test:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/backstage

      - run:
          name: Run tests
          command: yarn run test:all

  build:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/backstage

      - run:
          name: Mock secret files
          command: |
            touch github-app-production-credentials.yaml

      - run:
          name: Build application
          command: yarn run build:backend --config ../../app-config.yaml --config ../../app-config.production.yaml
          environment:
            NODE_ENV: production
            BACKSTAGE_ENVIRONMENT: production

      - persist_to_workspace:
          root: ~/backstage
          <<: *whitelist

  build-container:
    executor: architect/architect
    environment:
      DOCKER_BUILDKIT: "1"
    working_directory: ~/backstage
    steps:
      - checkout

      - setup_remote_docker

      - attach_workspace:
          at: ~/backstage

      - run:
          environment:
            IMAGE_NAME: *image_name
          name: Generate container image tag
          command: |
            echo -n "${IMAGE_NAME}:$(cat VERSION)" > .docker_image_name

      - architect/push-to-docker:
          tag-latest-branch: "main"
          image: "docker.io/giantswarm/backstage"
          dockerfile: 'packages/backend/Dockerfile'
          username_envar: "DOCKER_USERNAME"
          password_envar: "DOCKER_PASSWORD"

      - architect/push-to-docker:
          tag-latest-branch: "main"
          image: *image_name
          dockerfile: 'packages/backend/Dockerfile'
          username_envar: "QUAY_USERNAME"
          password_envar: "QUAY_PASSWORD"
