import { createTemplateAction } from '@backstage/plugin-scaffolder-node';
import { writeFile } from 'fs';

export const createCodeownersAction = () => {
  return createTemplateAction<{ organization: string; team: string }>({
    id: 'github:codeowners:create',
    schema: {
      input: {
        required: ['organization', 'team'],
        type: 'object',
        properties: {
          organization: {
            type: 'string',
            title: 'Organization',
            description: 'The GitHub organization name',
          },
          team: {
            type: 'string',
            title: 'Filename',
            description: 'The filename of the file that will be created',
          },
        },
      },
    },
    async handler(ctx) {
      const { signal } = ctx;

      // Sanitize a string like 'group:default/foobar'
      const parts = ctx.input.team.split("/");
      const team = parts[parts.length - 1];

      let contents = "# generated by giantswarm/github actions - changes will be overwritten\n";
      contents += `* @${ctx.input.organization}/${team}\n`;

      await writeFile(
        `${ctx.workspacePath}/CODEOWNERS`,
        contents,
        { signal },
        _ => {},
      );
    },
  });
};
